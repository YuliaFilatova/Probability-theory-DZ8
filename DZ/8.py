#1) Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
#zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
#ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
#Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
#Полученные значения должны быть равны.
#Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
#а затем с использованием функций из библиотек numpy и pandas.

import numpy as np
import pandas as pd
from scipy import stats
import matplotlib.pyplot as plt

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

#Вычислим ковариацию двух величин с помощью элементарных действий:
cov_zp_ks = np.mean(zp*ks) - np.mean(zp)*np.mean(ks)
print(cov_zp_ks) 
#Вычислим ковариацию двух величин через функцию cov
cov_zp_ks = np.cov(zp, ks, ddof=0)[0, 1]
print(cov_zp_ks)
#Вычислим коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков:
corr = cov_zp_ks / (np.std(zp) * np.std(ks))
corr
corr_coef = cov_zp_ks / (np.std(zp, ddof=0) * np.std(ks, ddof=0))
print(corr_coef)

#Numpy
corr_numpy = np.corrcoef(zp, ks)[0][1]
print(corr_numpy)
#Pandas
corr_pandas = pd.Series(zp).corr(pd.Series(ks), method='pearson')
print(corr_pandas)

#2) Измерены значения IQ выборки студентов,
#обучающихся в местных технических вузах:
#131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
#Известно, что в генеральной совокупности IQ распределен нормально.
#Найдите доверительный интервал для математического ожидания с надежностью 0.95.
iq = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
alpha = 0.05
n = iq.size
std = iq.std(ddof=1)
mean = iq.mean()
print(f'>>> Размер выборки: n = {n}\n'f'>>> Среднее квадратическое отклонение по выборке(несмещенное): {std:.2f}\n'f'>>> Среднее выборочное: {mean:.2f}')

#Cчитаем значения t и отклонение
t = stats.t.ppf(1 - alpha / 2, n - 1)
d = t * std / (n) ** 0.5
d,t
#Считаем доверительный интервал
min = mean - d
max = mean + d
print(f'>>> Доверительный интервал для математического ожидания с надежностью 0.95 составляет:{min: .2f};{max: .2f}')

#3) Известно, что рост футболистов в сборной распределен нормально с дисперсией генеральной совокупности,
#равной 25 кв.см. Объем выборки равен 27, среднее выборочное составляет 174.2.
#Найдите доверительный интервал для математического ожидания с надежностью 0.95.

#Для расчета доверительного интервала при извесной СКО будем использовать z-критерий
#и формулу для среднего арифмитического
var = 25
n = 27
mean = 174.2
std = (var)**0.5
alpha = 0.05
z=stats.norm.ppf(1-alpha/2,n-1)
d=z*std/(n)**0.5
min = mean - d
max = mean + d
print(f'>>> Доверительный интервал для математического ожидания с надежностью 0.95 составляет:{min: .2f};{max: .2f}')